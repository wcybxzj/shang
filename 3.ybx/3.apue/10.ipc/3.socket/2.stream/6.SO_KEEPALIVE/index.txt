http://www.blogjava.net/yongboy/archive/2015/04/14/424413.html

SO_KEEPALIVE的用处就类似hplsp11中的定义器

客户端非正常关闭,例如拔掉网线,就不能响应了,
服务端并会在read返回-1,errno设置ETIMEOUT超时错误
服务器就可以关闭此连接来降低负载

=================================================================
只有服务端设置SO_KEEPALIVE有效果,客户端设置不设置都没效果
192.168.247.99:
wireshark:进行测试的监控
tcp and tcp.port == 1234
可以看到大量的心跳包
192.168.247.99对192.168.247.100 发送TCP tcp-keepalive包来进行健康情况监控
192.168.247.100对192.168.247.99 发送TCP tcp-keepalive ack 进行确认
192.168.247.99对192.168.247.100 发送TCP tcp-keepalive包来进行健康情况监控
192.168.247.100对192.168.247.99 发送TCP tcp-keepalive ack 进行确认
192.168.247.99对192.168.247.100 发送TCP tcp-keepalive包来进行健康情况监控
192.168.247.100对192.168.247.99 发送TCP tcp-keepalive ack 进行确认
.................省略..................
=================================================================

测试1:
因为服务器使用了keepalive 可以很快发现客户端异常断开,
time out 然后关闭客户端连接

192.168.247.99:
./1.server 192.168.247.99 1234 yes
use keep-alive
radd:0.0.0.0 rport:0
error:Connection timed out

192.168.247.100:
nc 192.168.247.99 1234

192.168.247.99:
[root@web11 ~]# netstat -ant|grep 1234
tcp        0      0 192.168.247.99:1234         0.0.0.0:*             LISTEN
tcp        0      0 192.168.247.99:1234         192.168.247.100:55254 ESTABLISHED

192.168.247.100:
这台虚拟机断开网络连接,相当于真机拔网线

192.168.247.99:
看到当服务器247.99开启了SO_KEEPALIVE可以发现客户端的网络连接异常来关闭此客户连接的
[root@web11 ~]# netstat -ant|grep 1234
tcp        0      0 192.168.247.99:1234         0.0.0.0:*             LISTEN
=================================================================
测试2:
因为服务器没有使用了keepalive 客户端异常断开网络后服务器不能发现
192.168.247.99:
./1.server 192.168.247.99 1234 no
not use keep-alive
radd:0.0.0.0 rport:0

192.168.247.100:
nc 192.168.247.99 1234

192.168.247.99:
[root@web11 ~]# netstat -ant|grep 1234
tcp        0      0 192.168.247.99:1234         0.0.0.0:*             LISTEN
tcp        0      0 192.168.247.99:1234         192.168.247.100:55253 ESTABLISHED

192.168.247.100:
这台虚拟机断开网络连接,相当于真机拔网线

192.168.247.99:
看到本来247.100网卡都拔了247.99根本发现不了
[root@web11 ~]# netstat -ant|grep 1234
tcp        0      0 192.168.247.99:1234         0.0.0.0:*             LISTEN
tcp        0      0 192.168.247.99:1234         192.168.247.100:55253 ESTABLISHED
