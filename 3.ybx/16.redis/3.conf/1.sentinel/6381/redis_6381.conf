port 6381

#单位微秒 10000微秒=0.01秒
slowlog-log-slower-than 20000

#slow log 是列表类型 长度128
slowlog-max-len 128
# Generated by CONFIG REWRITE
dir "./"

#单位字节 1024*1024*1024 = 1G
maxmemory 1953125kb

#对应的配置规则是：
#client-output-buffer-limit <class> <hard limit> <soft limit> <soft seconds>
#客户端类型，分为三种。a）normal：普通客户端；b）slave：slave客户端，用于复制；c）pubsub：发布订阅客户端。
#<hard limit>：如果客户端使用的输出缓冲区大于<hard limit>，客户端会被立即关闭。
#<soft limit>和<soft seconds>：如果客户端使用的输出缓冲区超过了<soft limit>并且持续了<soft limit>秒，客户端会被立即关闭。
#限制普通客户端输出缓冲区的，把错误扼杀在摇篮中，例如可以进行如下设置：
client-output-buffer-limit normal 20mb 10mb 120
#适当增大slave的输出缓冲区的，如果master节点写入较大，slave客户端的输出缓冲区可能会比较大，一旦slave客户端连接因为输出缓冲区溢出被kill，会造成复制重连。
client-output-buffer-limit slave 1gb 512mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

#最大客户连接数
maxclients 10000

#检测客户端空闲连接的超时时间，一旦idle时间达到了timeout，客户端将会被关闭，如果设置为0就不进行检测。
#timeout为0 ,0是默认值 ,不检测客户端超时
#客户30秒不发命令就认为超时 ,redis server就会主动关闭连接
timeout 30

#tcp-keepalive：
#检测TCP连接活性的周期，默认值为0，也就是不进行检测，如果需要设置，建议为60，
#那么Redis会每隔60秒对它创建的TCP连接进行活性检测，防止大量死连接占用系统资源。
tcp-keepalive 60

#使用save相关配置，如“save m n”。表示m秒内数据集存在n次修改时，自动触发bgsave。
save 900 1
save 300 10
save 60 10000

################################AOF######################################
#开启AOF功能需要设置配置：appendonly yes，默认不开启。
#AOF文件名通过appendfilename配置设置，默认文件名是appendonly.aof。
#保存路径同RDB持久化方式一致，通过dir配置指定。
appendonly yes

appendfilename "appendonly.aof"

#配置为always时，每次写入都要同步AOF文件，在一般的SATA硬盘上，Redis只能支持大约几百TPS写入，显然跟Redis高性能特性背道而驰，不建议配置。
#配置为no，由于操作系统每次同步AOF文件的周期不可控，而且会加大每次同步硬盘的数据量，虽然提升了性能，但数据安全性无法保证。
#配置为everysec，是建议的同步策略，也是默认配置，做到兼顾性能和数据安全性。理论上只有在系统突然宕机的情况下丢失1秒的数据。（严格来说最多丢失1秒数据是不准确的，5.3节会做具体介绍到。）

#always:数据写入aof_buf立刻调用fsync
#everysec:数据写入aof_buf,有一个单独的线程每秒调用一次fsync
#no:数据写入aof_buf,不主动fsync,让系统自动去fsync
# appendfsync always
appendfsync everysec
# appendfsync no

#子进程根据内存快照，按照命令合并规则写入到新的AOF文件。
#每次批量写入硬盘数据量由配置aof-rewrite-incremental-fsync控制，默认为32MB，
#防止单次刷盘数据过多造成硬盘阻塞。
aof-rewrite-incremental-fsync yes

#对于错误格式的AOF文件，先进行备份，然后采用redis-check-aof--fix命令进行修复，
#修复后使用diff-u对比数据的差异，找出丢失的数据，有些可以人工修改补全。
#
#AOF文件可能存在结尾不完整的情况，比如机器突然掉电导致AOF尾部文件命令写入不全。
#Redis为我们提供了aof-load-truncated配置来兼容这种情况，默认开启。
#加载AOF时，当遇到此问题时会忽略并继续启动，同时打印如下警告日志：
# !!! Warning: short read while loading the AOF file !!!
# # !!! Truncating the AOF at offset 397856725 !!!
# # AOF loaded anyway because aof-load-truncated is enabled
aof-load-truncated yes

#配置no-appendfsync-on-rewrite=yes时，在极端情况下可能丢失整个AOF重写期间的数据，需要根据数据安全性决定是否配置。
#AOF重写时会消耗大量硬盘IO，可以开启配置no-appendfsync-on-rewrite，默认关闭。表示在AOF重写期间不做fsync操作。
#no-appendfsync-on-rewrite yes

slaveof 127.0.0.1 6379
slave-priority 0
